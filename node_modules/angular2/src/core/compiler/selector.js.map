{"version":3,"sources":["@traceur/generated/TemplateParser/5404","@traceur/generated/TemplateParser/5403","@traceur/generated/TemplateParser/5402","@traceur/generated/TemplateParser/5408","angular2/src/core/compiler/selector.js","@traceur/generated/TemplateParser/5405","@traceur/generated/TemplateParser/5409","angular2/src/core/compiler/@traceur/generated/TemplateParser/25","angular2/src/core/compiler/@traceur/generated/TemplateParser/23","angular2/src/core/compiler/@traceur/generated/TemplateParser/26","angular2/src/core/compiler/@traceur/generated/TemplateParser/37","angular2/src/core/compiler/@traceur/generated/TemplateParser/24","angular2/src/core/compiler/@traceur/generated/TemplateParser/3228","angular2/src/core/compiler/@traceur/generated/TemplateParser/3229","angular2/src/core/compiler/@traceur/generated/TemplateParser/3230","angular2/src/core/compiler/@traceur/generated/TemplateParser/3231","angular2/src/core/compiler/@traceur/generated/TemplateParser/3232","angular2/src/core/compiler/@traceur/generated/TemplateParser/3233","angular2/src/core/compiler/@traceur/generated/TemplateParser/3234","angular2/src/core/compiler/@traceur/generated/TemplateParser/3235","angular2/src/core/compiler/@traceur/generated/TemplateParser/3236","angular2/src/core/compiler/@traceur/generated/TemplateParser/3237","@traceur/generated/TemplateParser/5411","angular2/src/core/compiler/@traceur/generated/TemplateParser/3238","angular2/src/core/compiler/@traceur/generated/TemplateParser/3239"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/selector.js","sourceRoot":"/Users/radokirov/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {List, Map, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent, isBlank, RegExpWrapper, RegExpMatcherWrapper, StringWrapper, BaseException} from 'angular2/src/facade/lang';\n\nconst _EMPTY_ATTR_VALUE = '';\n\n// TODO: Can't use `const` here as\n// in Dart this is not transpiled into `final` yet...\nvar _SELECTOR_REGEXP =\n    RegExpWrapper.create('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' +    // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' +                   // \".class\"\n    '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' + // \"[name]\", \"[name=value]\" or \"[name*=value]\"\n    '(?:\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)');  // \",\"\n\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element:string;\n  classNames:List;\n  attrs:List;\n  notSelector: CssSelector;\n  static parse(selector:string): List<CssSelector> {\n    var results = ListWrapper.create();\n    var _addResult = (res, cssSel) => {\n      if (isPresent(cssSel.notSelector) && isBlank(cssSel.element) \n        && ListWrapper.isEmpty(cssSel.classNames) && ListWrapper.isEmpty(cssSel.attrs)) {\n        cssSel.element = \"*\";\n      }\n      ListWrapper.push(res, cssSel);\n    }\n    var cssSelector = new CssSelector();\n    var matcher = RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);\n    var match;\n    var current = cssSelector;\n    while (isPresent(match = RegExpMatcherWrapper.next(matcher))) {\n      if (isPresent(match[1])) {\n        if (isPresent(cssSelector.notSelector)) {\n          throw new BaseException('Nesting :not is not allowed in a selector');\n        }\n        current.notSelector = new CssSelector();\n        current = current.notSelector;\n      }\n      if (isPresent(match[2])) {\n        current.setElement(match[2]);\n      }\n      if (isPresent(match[3])) {\n        current.addClassName(match[3]);\n      }\n      if (isPresent(match[4])) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (isPresent(match[6])) {\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n\n  constructor() {\n    this.element = null;\n    this.classNames = ListWrapper.create();\n    this.attrs = ListWrapper.create();\n    this.notSelector = null;\n  }\n\n  setElement(element:string = null) {\n    if (isPresent(element)) {\n      element = element.toLowerCase();\n    }\n    this.element = element;\n  }\n\n  addAttribute(name:string, value:string = _EMPTY_ATTR_VALUE) {\n    ListWrapper.push(this.attrs, name.toLowerCase());\n    if (isPresent(value)) {\n      value = value.toLowerCase();\n    } else {\n      value = _EMPTY_ATTR_VALUE;\n    }\n    ListWrapper.push(this.attrs, value);\n  }\n\n  addClassName(name:string) {\n    ListWrapper.push(this.classNames, name.toLowerCase());\n  }\n\n  toString():string {\n    var res = '';\n    if (isPresent(this.element)) {\n      res += this.element;\n    }\n    if (isPresent(this.classNames)) {\n      for (var i=0; i<this.classNames.length; i++) {\n        res += '.' + this.classNames[i];\n      }\n    }\n    if (isPresent(this.attrs)) {\n      for (var i=0; i<this.attrs.length;) {\n        var attrName = this.attrs[i++];\n        var attrValue = this.attrs[i++]\n        res += '[' + attrName;\n        if (attrValue.length > 0) {\n          res += '=' + attrValue;\n        }\n        res += ']';\n      }\n    }\n    if (isPresent(this.notSelector)) {\n      res += \":not(\" + this.notSelector.toString() + \")\";\n    }\n    return res;\n  }\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n  _elementMap:Map;\n  _elementPartialMap:Map;\n  _classMap:Map;\n  _classPartialMap:Map;\n  _attrValueMap:Map;\n  _attrValuePartialMap:Map;\n  _listContexts:List;\n  constructor() {\n    this._elementMap = MapWrapper.create();\n    this._elementPartialMap = MapWrapper.create();\n\n    this._classMap = MapWrapper.create();\n    this._classPartialMap = MapWrapper.create();\n\n    this._attrValueMap = MapWrapper.create();\n    this._attrValuePartialMap = MapWrapper.create();\n\n    this._listContexts = ListWrapper.create();\n  }\n\n  addSelectables(cssSelectors:List<CssSelector>, callbackCtxt) {\n    var listContext = null;\n    if (cssSelectors.length > 1) {\n      listContext= new SelectorListContext(cssSelectors);\n      ListWrapper.push(this._listContexts, listContext);\n    }\n    for (var i = 0; i < cssSelectors.length; i++) {\n      this.addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n\n  /**\n   * Add an object that can be found later on by calling `match`.\n   * @param cssSelector A css selector\n   * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n   */\n  addSelectable(cssSelector, callbackCtxt, listContext: SelectorListContext) {\n    var matcher = this;\n    var element = cssSelector.element;\n    var classNames = cssSelector.classNames;\n    var attrs = cssSelector.attrs;\n    var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n\n    if (isPresent(element)) {\n      var isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (isPresent(classNames)) {\n      for (var index = 0; index<classNames.length; index++) {\n        var isTerminal = attrs.length === 0 && index === classNames.length - 1;\n        var className = classNames[index];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (isPresent(attrs)) {\n      for (var index = 0; index<attrs.length; ) {\n        var isTerminal = index === attrs.length - 2;\n        var attrName = attrs[index++];\n        var attrValue = attrs[index++];\n        var map = isTerminal ? matcher._attrValueMap : matcher._attrValuePartialMap;\n        var valuesMap = MapWrapper.get(map, attrName)\n        if (isBlank(valuesMap)) {\n          valuesMap = MapWrapper.create();\n          MapWrapper.set(map, attrName, valuesMap);\n        }\n        if (isTerminal) {\n          this._addTerminal(valuesMap, attrValue, selectable);\n        } else {\n          matcher = this._addPartial(valuesMap, attrValue);\n        }\n      }\n    }\n  }\n\n  _addTerminal(map:Map<string,string>, name:string, selectable) {\n    var terminalList = MapWrapper.get(map, name)\n    if (isBlank(terminalList)) {\n      terminalList = ListWrapper.create();\n      MapWrapper.set(map, name, terminalList);\n    }\n    ListWrapper.push(terminalList, selectable);\n  }\n\n  _addPartial(map:Map<string,string>, name:string) {\n    var matcher = MapWrapper.get(map, name)\n    if (isBlank(matcher)) {\n      matcher = new SelectorMatcher();\n      MapWrapper.set(map, name, matcher);\n    }\n    return matcher;\n  }\n\n  /**\n   * Find the objects that have been added via `addSelectable`\n   * whose css selector is contained in the given css selector.\n   * @param cssSelector A css selector\n   * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n   * @return boolean true if a match was found\n  */\n  match(cssSelector:CssSelector, matchedCallback:Function):boolean {\n    var result = false;\n    var element = cssSelector.element;\n    var classNames = cssSelector.classNames;\n    var attrs = cssSelector.attrs;\n\n    for (var i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) || result;\n\n    if (isPresent(classNames)) {\n      for (var index = 0; index<classNames.length; index++) {\n        var className = classNames[index];\n        result = this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) || result;\n      }\n    }\n\n    if (isPresent(attrs)) {\n      for (var index = 0; index<attrs.length;) {\n        var attrName = attrs[index++];\n        var attrValue = attrs[index++];\n\n        var valuesMap = MapWrapper.get(this._attrValueMap, attrName);\n        if (!StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\n          result = this._matchTerminal(valuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) || result;\n        }\n        result = this._matchTerminal(valuesMap, attrValue, cssSelector, matchedCallback) || result;\n\n        valuesMap = MapWrapper.get(this._attrValuePartialMap, attrName)\n        result = this._matchPartial(valuesMap, attrValue, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n\n  _matchTerminal(map:Map<string,string> = null, name, cssSelector, matchedCallback):boolean {\n    if (isBlank(map) || isBlank(name)) {\n      return false;\n    }\n    \n    var selectables = MapWrapper.get(map, name);\n    var starSelectables = MapWrapper.get(map, \"*\");\n    if (isPresent(starSelectables)) {\n      selectables = ListWrapper.concat(selectables, starSelectables);\n    }\n    if (isBlank(selectables)) {\n      return false;\n    }\n    var selectable;\n    var result = false;\n    for (var index=0; index<selectables.length; index++) {\n      selectable = selectables[index];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n\n  _matchPartial(map:Map<string,string> = null, name, cssSelector, matchedCallback):boolean {\n    if (isBlank(map) || isBlank(name)) {\n      return false;\n    }\n    var nestedSelector = MapWrapper.get(map, name)\n    if (isBlank(nestedSelector)) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\n\nclass SelectorListContext {\n  selectors: List<CssSelector>;\n  alreadyMatched: boolean;\n\n  constructor(selectors:List<CssSelector>) {\n    this.selectors = selectors;\n    this.alreadyMatched = false;\n  }\n}\n\n// Store context to pass back selector and context when a selector is matched\nclass SelectorContext {\n  selector:CssSelector;\n  notSelector:CssSelector;\n  cbContext; // callback context\n  listContext: SelectorListContext;\n\n  constructor(selector:CssSelector, cbContext, listContext: SelectorListContext) {\n    this.selector = selector;\n    this.notSelector = selector.notSelector;\n    this.cbContext = cbContext;\n    this.listContext = listContext;\n  }\n\n  finalize(cssSelector: CssSelector, callback) {\n    var result = true;\n    if (isPresent(this.notSelector) && (isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\n      var notMatcher = new SelectorMatcher();\n      notMatcher.addSelectable(this.notSelector, null, null);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && isPresent(callback) && (isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\n      if (isPresent(this.listContext)) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","$__placeholder__0 = $__placeholder__1","assert.type.any","assert.type.any"]}