{"version":3,"sources":["@traceur/generated/TemplateParser/5404","angular2/test/core/compiler/selector_spec.js","@traceur/generated/TemplateParser/5412","@traceur/generated/TemplateParser/5403","@traceur/generated/TemplateParser/5402","@traceur/generated/TemplateParser/5408"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/selector_spec.js","sourceRoot":"/Users/radokirov/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, it, expect, beforeEach, ddescribe, iit, xit, el} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {SelectorMatcher} from 'angular2/src/core/compiler/selector';\nimport {CssSelector} from 'angular2/src/core/compiler/selector';\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nexport function main() {\n  describe('SelectorMatcher', () => {\n    var matcher, matched, selectableCollector, s1, s2, s3, s4;\n\n    function reset() {\n      matched = ListWrapper.create();\n    }\n\n    beforeEach(() => {\n      reset();\n      s1 = s2 = s3 = s4 = null;\n      selectableCollector = (selector, context) => {\n        ListWrapper.push(matched, selector);\n        ListWrapper.push(matched, context);\n      }\n      matcher = new SelectorMatcher();\n    });\n\n    it('should select by element name case insensitive', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('someTag'), 1);\n\n      expect(matcher.match(CssSelector.parse('SOMEOTHERTAG')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('SOMETAG')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1]);\n    });\n\n    it('should select by class name case insensitive', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('.someClass'), 1);\n      matcher.addSelectables(s2 = CssSelector.parse('.someClass.class2'), 2);\n\n      expect(matcher.match(CssSelector.parse('.SOMEOTHERCLASS')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('.SOMECLASS')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.someClass.class2')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1,s2[0],2]);\n    });\n\n    it('should select by attr name case insensitive independent of the value', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('[someAttr]'), 1);\n      matcher.addSelectables(s2 = CssSelector.parse('[someAttr][someAttr2]'), 2);\n\n      expect(matcher.match(CssSelector.parse('[SOMEOTHERATTR]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('[SOMEATTR]')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('[SOMEATTR=someValue]')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('[someAttr][someAttr2]')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1,s2[0],2]);\n    });\n\n    it('should select by attr name only once if the value is from the DOM', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('[some-decor]'), 1);\n\n      var elementSelector = new CssSelector();\n      var element = el('<div attr></div>');\n      var empty = DOM.getAttribute(element, 'attr');\n      elementSelector.addAttribute('some-decor', empty);\n      matcher.match(elementSelector, selectableCollector);\n      expect(matched).toEqual([s1[0],1]);\n    });\n\n    it('should select by attr name and value case insensitive', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('[someAttr=someValue]'), 1);\n\n      expect(matcher.match(CssSelector.parse('[SOMEATTR=SOMEOTHERATTR]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('[SOMEATTR=SOMEVALUE]')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1]);\n    });\n\n    it('should select by element name, class name and attribute name with value', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('someTag.someClass[someAttr=someValue]'), 1);\n\n      expect(matcher.match(CssSelector.parse('someOtherTag.someOtherClass[someOtherAttr]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someOtherClass[someOtherAttr]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someClass[someOtherAttr]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someClass[someAttr]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someClass[someAttr=someValue]')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1]);\n    });\n\n    it('should select independent of the order in the css selector', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('[someAttr].someClass'), 1);\n      matcher.addSelectables(s2 = CssSelector.parse('.someClass[someAttr]'), 2);\n      matcher.addSelectables(s3 = CssSelector.parse('.class1.class2'), 3);\n      matcher.addSelectables(s4 = CssSelector.parse('.class2.class1'), 4);\n\n      expect(matcher.match(CssSelector.parse('[someAttr].someClass')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1,s2[0],2]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.someClass[someAttr]')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1,s2[0],2]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.class1.class2')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s3[0],3,s4[0],4]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.class2.class1')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s4[0],4,s3[0],3]);\n    });\n\n    it('should not select with a matching :not selector', () => {\n      matcher.addSelectables(CssSelector.parse('p:not(.someClass)'), 1);\n      matcher.addSelectables(CssSelector.parse('p:not([someAttr])'), 2);\n      matcher.addSelectables(CssSelector.parse(':not(.someClass)'), 3);\n      matcher.addSelectables(CssSelector.parse(':not(p)'), 4);\n      matcher.addSelectables(CssSelector.parse(':not(p[someAttr])'), 5);\n\n      expect(matcher.match(CssSelector.parse('p.someClass[someAttr]')[0], selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n    });\n\n    it('should select with a non matching :not selector', () => {\n      matcher.addSelectables(s1 = CssSelector.parse('p:not(.someClass)'), 1);\n      matcher.addSelectables(s2 = CssSelector.parse('p:not(.someOtherClass[someAttr])'), 2);\n      matcher.addSelectables(s3 = CssSelector.parse(':not(.someClass)'), 3);\n      matcher.addSelectables(s4 = CssSelector.parse(':not(.someOtherClass[someAttr])'), 4);\n\n      expect(matcher.match(CssSelector.parse('p[someOtherAttr].someOtherClass')[0], selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1[0],1,s2[0],2,s3[0],3,s4[0],4]);\n    });\n\n    it('should select with one match in a list', () => {\n       matcher.addSelectables(s1 = CssSelector.parse('input[type=text], textbox'), 1);\n\n       expect(matcher.match(CssSelector.parse('textbox')[0], selectableCollector)).toEqual(true);\n       expect(matched).toEqual([s1[1],1]);\n\n       reset();\n       expect(matcher.match(CssSelector.parse('input[type=text]')[0], selectableCollector)).toEqual(true);\n       expect(matched).toEqual([s1[0],1]);\n    });\n\n    it('should not select twice with two matches in a list', () => {\n       matcher.addSelectables(s1 = CssSelector.parse('input, .someClass'), 1);\n\n       expect(matcher.match(CssSelector.parse('input.someclass')[0], selectableCollector)).toEqual(true);\n       expect(matched.length).toEqual(2);\n       expect(matched).toEqual([s1[0],1]);\n    });\n  });\n\n  describe('CssSelector.parse', () => {\n    it('should detect element names', () => {\n      var cssSelector = CssSelector.parse('sometag')[0];\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.toString()).toEqual('sometag');\n    });\n\n    it('should detect class names', () => {\n      var cssSelector = CssSelector.parse('.someClass')[0];\n      expect(cssSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('.someclass');\n    });\n\n    it('should detect attr names', () => {\n      var cssSelector = CssSelector.parse('[attrname]')[0];\n      expect(cssSelector.attrs).toEqual(['attrname', '']);\n\n      expect(cssSelector.toString()).toEqual('[attrname]');\n    });\n\n    it('should detect attr values', () => {\n      var cssSelector = CssSelector.parse('[attrname=attrvalue]')[0];\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.toString()).toEqual('[attrname=attrvalue]');\n    });\n\n    it('should detect multiple parts', () => {\n      var cssSelector = CssSelector.parse('sometag[attrname=attrvalue].someclass')[0];\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('sometag.someclass[attrname=attrvalue]');\n    });\n\n    it('should detect :not', () => {\n      var cssSelector = CssSelector.parse('sometag:not([attrname=attrvalue].someclass)')[0];\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.attrs.length).toEqual(0);\n      expect(cssSelector.classNames.length).toEqual(0);\n\n      var notSelector = cssSelector.notSelector;\n      expect(notSelector.element).toEqual(null);\n      expect(notSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(notSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('sometag:not(.someclass[attrname=attrvalue])');\n    });\n\n    it('should detect :not without truthy', () => {\n      var cssSelector = CssSelector.parse(':not([attrname=attrvalue].someclass)')[0];\n      expect(cssSelector.element).toEqual(\"*\");\n\n      var notSelector = cssSelector.notSelector;\n      expect(notSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(notSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('*:not(.someclass[attrname=attrvalue])');\n    });\n\n    it('should throw when nested :not', () => {\n      expect(() => {\n        CssSelector.parse('sometag:not(:not([attrname=attrvalue].someclass))')[0];\n      }).toThrowError('Nesting :not is not allowed in a selector');\n    });\n\n    it('should detect lists of selectors', () => {\n      var cssSelectors = CssSelector.parse('.someclass,[attrname=attrvalue], sometag');\n      expect(cssSelectors.length).toEqual(3);\n\n      expect(cssSelectors[0].classNames).toEqual(['someclass']);\n      expect(cssSelectors[1].attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelectors[2].element).toEqual('sometag');\n    });\n\n    it('should detect lists of selectors with :not', () => {\n      var cssSelectors = CssSelector.parse('input[type=text], :not(textarea), textbox:not(.special)');\n      expect(cssSelectors.length).toEqual(3);\n\n      expect(cssSelectors[0].element).toEqual('input');\n      expect(cssSelectors[0].attrs).toEqual(['type', 'text']);\n\n      expect(cssSelectors[1].element).toEqual('*');\n      expect(cssSelectors[1].notSelector.element).toEqual('textarea');\n\n      expect(cssSelectors[2].element).toEqual('textbox');\n      expect(cssSelectors[2].notSelector.classNames).toEqual(['special']);\n    });\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}